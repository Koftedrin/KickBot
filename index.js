const { createClient } = require("@retconned/kick-js");
const axios = require("axios");
const express = require('express'); // –î–æ–±–∞–≤–∏–ª–∏ express

// --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø RENDER ---
const KICK_CHANNEL_NAME = process.env.KICK_CHANNEL_NAME;
const BEARER_TOKEN = process.env.BEARER_TOKEN;
const COOKIES = process.env.COOKIES;
const N8N_WEBHOOK_URL = process.env.N8N_WEBHOOK_URL;

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã
if (!KICK_CHANNEL_NAME || !BEARER_TOKEN || !COOKIES || !N8N_WEBHOOK_URL) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –ó–∞–¥–∞–π—Ç–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Render: KICK_CHANNEL_NAME, BEARER_TOKEN, COOKIES, N8N_WEBHOOK_URL');
    process.exit(1);
}

async function startBot() {
    try {
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞ —Å—Ç—Ä–∏–º–µ—Ä–∞
        const client = createClient(KICK_CHANNEL_NAME, {
            readOnly: false,
            puppeteer: {
                args: [
                    '--no-sandbox',
                    '--disable-setuid-sandbox'
                ]
            }
        });

        console.log('[INFO] –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω. –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

        // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–∫–µ–Ω –∏ –∫—É–∫–∏
        await client.login({
            type: 'tokens',
            credentials: {
                bearerToken: BEARER_TOKEN,
                cookies: COOKIES,
            },
        });

        client.on('ready', () => {
            console.log(`‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ${client.user.tag}!`);
            console.log(`[INFO] –°–ª—É—à–∞–µ–º —á–∞—Ç –∫–∞–Ω–∞–ª–∞: ${KICK_CHANNEL_NAME}`);
        });

        client.on('close', () => {
            console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —á–∞—Ç–æ–º –∑–∞–∫—Ä—ã—Ç–æ.');
        });
        
        client.on('error', (err) => {
            console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', err);
        });

        // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
        client.on('ChatMessage', (message) => {
            const senderUsername = message.sender.username;
            const messageContent = message.content;

            console.log(`[${senderUsername}]: ${messageContent}`);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ n8n
            axios.post(N8N_WEBHOOK_URL, {
                channel_name: KICK_CHANNEL_NAME,
                sender_username: senderUsername,
                message: messageContent
            }).catch(err => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ n8n:', err.message);
            });
        });

    } catch (e) {
        console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", e.message);
    }
}

// --- –í–ï–ë-–°–ï–†–í–ï–† –î–õ–Ø RENDER ---
const app = express();
const port = process.env.PORT || 3000;

app.get('/', (req, res) => {
  res.send('Bot listener is alive!');
});

app.listen(port, () => {
  console.log(`[INFO] Web server started on port ${port} to keep Render happy.`);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
startBot();
